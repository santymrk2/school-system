/* ========== ASPIRANTE ========== */@Datapublic class AspiranteDTO {    private Long id;    private String nombre;    private String apellido;    private String dni;    private String escuelaActual;    private String conectividadInternet;    private String dispositivosDisponibles;    private String idiomasHabladosHogar;}@Data@AllArgsConstructor@NoArgsConstructor@Builderpublic class UsuarioDTO {    private Long id;    @NotNull    @Size(max = 255)    private String email;    @NotNull    @Size(max = 255)    private String password;    @NotNull    @Size(max = 50)    private Set<Role> roles;}/* ========== REGISTRO ASISTENCIA Y ASISTENCIA DÍA ========== */@Datapublic class AsistenciaDiaDTO {    private Long id;    private LocalDate fecha;    private Long seccionId;}/* ========== ASPIRANTE FAMILIAR ========== */@Datapublic class AspiranteFamiliarDTO {    private Long id;    private String tipoRelacion;    private Boolean viveConAlumno;    private Long aspiranteId;    private Long familiarId;}@Getter@Setterpublic class MensajeDTO {    private Long id;    @NotNull    private OffsetDateTime fechaEnvio;    @Size(max = 255)    private String asunto;    @NotNull    private String contenido;    @NotNull    private Boolean leido;    @NotNull    private Long emisor;    @NotNull    private Long receptor;}@Datapublic class SendMessageRequest {    @NotBlank    private String contenido;    @NotNull    private Long receptorId;}package edu.ecep.base_app.dtos;/* ========== MATRÍCULA ========== */@Datapublic class MatriculaDTO {    private Long id;    private Integer anioLectivo;    private String estado;    private LocalDate fechaInicio;    private LocalDate fechaFin;    private Long alumnoId;    private Long seccionId;}/* ========== RECIBO SUELDO ========== */@Datapublic class ReciboSueldoDTO {    private Long id;    private LocalDate fecha;    private BigDecimal monto;    private Long personalId;}/* ========== ASISTENCIA PERSONAL ========== */@Datapublic class AsistenciaPersonalDTO {    private Long id;    private Long personalId;    private LocalDate fecha;    private Boolean presente;}/* ========== ACTA ACCIDENTE ========== */@Datapublic class ActaAccidenteDTO {    private Long id;    private OffsetDateTime fechaAccidente;    private String lugar;    private String descripcion;    private String accionesTomadas;    private Long matriculaId;}/* ========== ASIGNACIÓN DOCENTE ========== */@Datapublic class AsignacionDocenteDTO {    private Long id;    private Boolean esTitular;    private LocalDate fechaInicio;    private LocalDate fechaFin;    private String observaciones;    private Long personalId;    private Long seccionId;    private Long materiaId;}/* ========== DÍA NO HÁBIL ========== */@Datapublic class DiaNoHabilDTO {    private Long id;    private LocalDate fecha;    private String descripcion;}/* ========== SECCIÓN ========== */@Datapublic class SeccionDTO {    private Long id;    private Integer anioLectivo;    private String nombre;    private String nivelAcademico;    private Integer grado;    private Turno turno;    private Set<Long> cuotasIds;}package edu.ecep.base_app.dtos;@Datapublic class RegistroAsistenciaDTO {    private Long id;    private Long asistenciaDiaId;    private Long matriculaId;    private Boolean presente;    private String justificacion;}/* ========== EVALUACIÓN ========== */@Datapublic class EvaluacionDTO {    private Long id;    private Long seccionId;    private Long materiaId;    private LocalDate fecha;    private String tipo;    private String descripcion;}@Getterpublic class AuthResponse {    private String token;    private String email;    private Set<Role> roles;    public AuthResponse(String token, String email, Set<Role> roles) {        this.token = token;        this.email = email;        this.roles = roles;    }}/* ========== CUOTA Y PAGO CUOTA ========== */@Datapublic class CuotaDTO {    private Long id;    private String nombre;    private BigDecimal monto;    private LocalDate fechaEmision;    private LocalDate fechaVencimiento;    private String nivelAcademico;    private Integer grado;    private Turno turno;    private Long seccionId;}@Data@AllArgsConstructor@NoArgsConstructorpublic class ChatMessageDTO {    private Long id;    private Long emisorId;    private Long receptorId;    private String contenido;    private OffsetDateTime fechaEnvio;    private boolean leido;}@Getter@Setterpublic class LoginRequest {    @NotBlank    private String email;    @NotBlank    private String password;}@Datapublic class PagoCuotaDTO {    private Long id;    private LocalDate fechaPago;    private BigDecimal montoPagado;    private String medioPago;    private Long cuotaId;    private Long matriculaId;}/* ========== FAMILIAR ========== */@Datapublic class FamiliarDTO {    private Long id;    private String nombre;    private String apellido;    private String dni;    private String email;    private String telefono;}/* ========== MATERIA ========== */@Datapublic class MateriaDTO {    private Long id;    private String nombre;    private String nivelAcademico;}/* ========== ALUMNO FAMILIAR ========== */@Datapublic class AlumnoFamiliarDTO {    private Long id;    private String tipoRelacion;    private Boolean viveConAlumno;    private Long alumnoId;    private Long familiarId;}/* ========== SOLICITUD ADMISIÓN ========== */@Datapublic class SolicitudAdmisionDTO {    private Long id;    private String estado;    private String motivoRechazo;    private LocalDate fechaEntrevista;    private Boolean entrevistaRealizada;    private Boolean emailConfirmacionEnviado;    private Boolean autorizadoComunicacionesEmail;    private Long aspiranteId;}@Getter@Setterpublic class ComunicadoDTO {    private Long id;    @NotNull    @Size(max = 255)    private String titulo;    @NotNull    private String cuerpoMensaje;    @NotNull    @Size(max = 50)    private String tipoComunicacion;    @Size(max = 50)    private String nivelDestino;    private Long seccionDestino;    @NotNull    private Long publicador;}/* ========== LICENCIA ========== */@Datapublic class LicenciaDTO {    private Long id;    private LocalDate fechaInicio;    private LocalDate fechaFin;    private String tipoLicencia;    private Long personalId;}/* ========== FORMACION ACADEMICA ========== */@Datapublic class FormacionAcademicaDTO {    private Long id;    private String nivel;    private String institucion;    private String titulo;    private LocalDate fechaInicio;    private LocalDate fechaFin;}/* ========== ALUMNO ========== */@Datapublic class AlumnoDTO {    private Long id;    private String nombre;    private String apellido;    private String dni;    private LocalDate fechaInscripcion;    private String observacionesGenerales;    private String motivoRechazoBaja;}/* ========== INFORME INICIAL ========== */@Datapublic class InformeInicialDTO {    private Long id;    private String trimestre;    private LocalDate fecha;    private String contenido;    private Long matriculaId;    private Long reportadoPorId;}@Getter@Setter@NoArgsConstructorpublic class UsuarioBusquedaDTO {    private Long id;    private String email;    private Set<Role> roles;    private Long personaId;    private String nombreCompleto;    private String dni;    private String tipoPersona;    public UsuarioBusquedaDTO(Long id, String email, Set<Role> roles,                              Long personaId, String nombreCompleto,                              String dni, String tipoPersona) {        this.id = id;        this.email = email;        this.roles = roles;        this.personaId = personaId;        this.nombreCompleto = nombreCompleto;        this.dni = dni;        this.tipoPersona = tipoPersona;    }}/* ========== PERSONAL ========== */@Datapublic class PersonalDTO {    private Long id;    private String nombre;    private String apellido;    private String dni;    private LocalDate fechaIngreso;    private String condicionLaboral;    private String cargo;    private String situacionActual;}/* ========== CALIFICACIÓN ========== */@Datapublic class CalificacionDTO {    private Long id;    private Long matriculaId;    private Long evaluacionId;    private String valor;    private String observaciones;}
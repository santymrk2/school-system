/* ========== PAGO CUOTA ========== */@Mapper(componentModel = "spring")public interface PagoCuotaMapper {    @Mapping(source = "cuota.id", target = "cuotaId")    @Mapping(source = "matricula.id", target = "matriculaId")    PagoCuotaDTO toDto(PagoCuota entity);    @Mapping(target = "cuota", ignore = true)    @Mapping(target = "matricula", ignore = true)    PagoCuota toEntity(PagoCuotaDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "cuota", ignore = true)    @Mapping(target = "matricula", ignore = true)    void updateEntityFromDto(PagoCuotaDTO dto, @MappingTarget PagoCuota entity);}public class UsuarioBusquedaMapper {    public static UsuarioBusquedaDTO toDto(Usuario usuario) {        return new UsuarioBusquedaDTO(                usuario.getId(),                usuario.getEmail(),                usuario.getRoles(),                usuario.getPersona() != null ? usuario.getPersona().getId() : null,                usuario.getPersona() != null                        ? usuario.getPersona().getNombre() + " " + usuario.getPersona().getApellido()                        : null,                usuario.getPersona() != null ? usuario.getPersona().getDni() : null,                usuario.getPersona() != null ? usuario.getPersona().getClass().getSimpleName() : null        );    }}/* ========== EVALUACIÓN ========== */@Mapper(componentModel = "spring")public interface EvaluacionMapper {    @Mapping(source = "seccion.id", target = "seccionId")    @Mapping(source = "materia.id", target = "materiaId")    EvaluacionDTO toDto(Evaluacion entity);    @Mapping(target = "seccion", ignore = true)    @Mapping(target = "materia", ignore = true)    Evaluacion toEntity(EvaluacionDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "seccion", ignore = true)    @Mapping(target = "materia", ignore = true)    void updateEntityFromDto(EvaluacionDTO dto, @MappingTarget Evaluacion entity);}/* ========== MATRÍCULA ========== */@Mapper(componentModel = "spring")public interface MatriculaMapper {    @Mapping(source = "alumno.id", target = "alumnoId")    @Mapping(source = "seccion.id", target = "seccionId")    MatriculaDTO toDto(Matricula entity);    @Mapping(target = "alumno", ignore = true)    @Mapping(target = "seccion", ignore = true)    Matricula toEntity(MatriculaDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "alumno", ignore = true)    @Mapping(target = "seccion", ignore = true)    void updateEntityFromDto(MatriculaDTO dto, @MappingTarget Matricula entity);}/* ========== ALUMNO FAMILIAR ========== */@Mapper(componentModel = "spring")public interface AlumnoFamiliarMapper {    @Mapping(source = "alumno.id", target = "alumnoId")    @Mapping(source = "familiar.id", target = "familiarId")    AlumnoFamiliarDTO toDto(AlumnoFamiliar entity);    @Mapping(target = "alumno", ignore = true)    @Mapping(target = "familiar", ignore = true)    AlumnoFamiliar toEntity(AlumnoFamiliarDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "alumno", ignore = true)    @Mapping(target = "familiar", ignore = true)    void updateEntityFromDto(AlumnoFamiliarDTO dto, @MappingTarget AlumnoFamiliar entity);}/* ========== PERSONAL ========== */@Mapper(componentModel = "spring")public interface PersonalMapper {    PersonalDTO toDto(Personal entity);    Personal toEntity(PersonalDTO dto);    @Mapping(target = "id", ignore = true)    void updateEntityFromDto(PersonalDTO dto, @MappingTarget Personal entity);}/* ========== ASIGNACIÓN DOCENTE ========== */@Mapper(componentModel = "spring")public interface AsignacionDocenteMapper {    @Mapping(source = "docente.id", target = "personalId")    @Mapping(source = "seccion.id", target = "seccionId")    @Mapping(source = "materia.id", target = "materiaId")    AsignacionDocenteDTO toDto(AsignacionDocente entity);    @Mapping(target = "docente", ignore = true)    @Mapping(target = "seccion", ignore = true)    @Mapping(target = "materia", ignore = true)    AsignacionDocente toEntity(AsignacionDocenteDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "docente", ignore = true)    @Mapping(target = "seccion", ignore = true)    @Mapping(target = "materia", ignore = true)    void updateEntityFromDto(AsignacionDocenteDTO dto, @MappingTarget AsignacionDocente entity);}/* ========== ASISTENCIA DÍA ========== */@Mapper(componentModel = "spring")public interface AsistenciaDiaMapper {    @Mapping(source = "seccion.id", target = "seccionId")    AsistenciaDiaDTO toDto(AsistenciaDia entity);    @Mapping(target = "seccion", ignore = true)    AsistenciaDia toEntity(AsistenciaDiaDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "seccion", ignore = true)    void updateEntityFromDto(AsistenciaDiaDTO dto, @MappingTarget AsistenciaDia entity);}/* ========== CALIFICACIÓN ========== */@Mapper(componentModel = "spring")public interface CalificacionMapper {    @Mapping(source = "matricula.id", target = "matriculaId")    CalificacionDTO toDto(Calificacion entity);    @Mapping(target = "matricula", ignore = true)    Calificacion toEntity(CalificacionDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "matricula", ignore = true)    void updateEntityFromDto(CalificacionDTO dto, @MappingTarget Calificacion entity);}/* ========== ASISTENCIA PERSONAL ========== */@Mapper(componentModel = "spring")public interface AsistenciaPersonalMapper {    @Mapping(source = "personal.id", target = "personalId")    AsistenciaPersonalDTO toDto(AsistenciaPersonal entity);    @Mapping(target = "personal", ignore = true)    AsistenciaPersonal toEntity(AsistenciaPersonalDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "personal", ignore = true)    void updateEntityFromDto(AsistenciaPersonalDTO dto, @MappingTarget AsistenciaPersonal entity);}/* ========== DÍA NO HÁBIL ========== */@Mapper(componentModel = "spring")public interface DiaNoHabilMapper {    DiaNoHabilDTO toDto(DiaNoHabil entity);    DiaNoHabil toEntity(DiaNoHabilDTO dto);    @Mapping(target = "id", ignore = true)    void updateEntityFromDto(DiaNoHabilDTO dto, @MappingTarget DiaNoHabil entity);}/* ========== INFORME INICIAL ========== */@Mapper(componentModel = "spring")public interface InformeInicialMapper {    @Mapping(source = "matricula.id", target = "matriculaId")    @Mapping(source = "reportadoPor.id", target = "reportadoPorId")    InformeInicialDTO toDto(InformeInicial entity);    @Mapping(target = "matricula", ignore = true)    @Mapping(target = "reportadoPor", ignore = true)    InformeInicial toEntity(InformeInicialDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "matricula", ignore = true)    @Mapping(target = "reportadoPor", ignore = true)    void updateEntityFromDto(InformeInicialDTO dto, @MappingTarget InformeInicial entity);}/* ========== CUOTA ========== */@Mapper(componentModel = "spring")public interface CuotaMapper {    @Mapping(source = "seccion.id", target = "seccionId")    CuotaDTO toDto(Cuota entity);    @Mapping(target = "seccion", ignore = true)    Cuota toEntity(CuotaDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "seccion", ignore = true)    void updateEntityFromDto(CuotaDTO dto, @MappingTarget Cuota entity);}/* ========== FAMILIAR ========== */@Mapper(componentModel = "spring")public interface FamiliarMapper {    FamiliarDTO toDto(Familiar entity);    Familiar toEntity(FamiliarDTO dto);    @Mapping(target = "id", ignore = true)    void updateEntityFromDto(FamiliarDTO dto, @MappingTarget Familiar entity);}/* ========== ACTA ACCIDENTE ========== */@Mapper(componentModel = "spring")public interface ActaAccidenteMapper {    @Mapping(source = "matricula.id", target = "matriculaId")    ActaAccidenteDTO toDto(ActaAccidente entity);    @Mapping(target = "matricula", ignore = true)    ActaAccidente toEntity(ActaAccidenteDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "matricula", ignore = true)    void updateEntityFromDto(ActaAccidenteDTO dto, @MappingTarget ActaAccidente entity);}/* ========== ALUMNO ========== */@Mapper(componentModel = "spring")public interface AlumnoMapper {    AlumnoDTO toDto(Alumno entity);    Alumno toEntity(AlumnoDTO dto);    @Mapping(target = "id", ignore = true)    void updateEntityFromDto(AlumnoDTO dto, @MappingTarget Alumno entity);}/* ========== RECIBO SUELDO ========== */@Mapper(componentModel = "spring")public interface ReciboSueldoMapper {    @Mapping(source = "personal.id", target = "personalId")    ReciboSueldoDTO toDto(ReciboSueldo entity);    @Mapping(target = "personal", ignore = true)    ReciboSueldo toEntity(ReciboSueldoDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "personal", ignore = true)    void updateEntityFromDto(ReciboSueldoDTO dto, @MappingTarget ReciboSueldo entity);}/* ========== MATERIA ========== */@Mapper(componentModel = "spring")public interface MateriaMapper {    MateriaDTO toDto(Materia entity);    Materia toEntity(MateriaDTO dto);    @Mapping(target = "id", ignore = true)    void updateEntityFromDto(MateriaDTO dto, @MappingTarget Materia entity);}/* ========== ASPIRANTE FAMILIAR ========== */@Mapper(componentModel = "spring")public interface AspiranteFamiliarMapper {    @Mapping(source = "aspirante.id", target = "aspiranteId")    @Mapping(source = "familiar.id", target = "familiarId")    AspiranteFamiliarDTO toDto(AspiranteFamiliar entity);    @Mapping(target = "aspirante", ignore = true)    @Mapping(target = "familiar", ignore = true)    AspiranteFamiliar toEntity(AspiranteFamiliarDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "aspirante", ignore = true)    @Mapping(target = "familiar", ignore = true)    void updateEntityFromDto(AspiranteFamiliarDTO dto, @MappingTarget AspiranteFamiliar entity);}/* ========== FORMACION ACADEMICA ========== */@Mapper(componentModel = "spring")public interface FormacionAcademicaMapper {    FormacionAcademicaDTO toDto(FormacionAcademica entity);    FormacionAcademica toEntity(FormacionAcademicaDTO dto);    @Mapping(target = "id", ignore = true)    void updateEntityFromDto(FormacionAcademicaDTO dto, @MappingTarget FormacionAcademica entity);}/* ========== REGISTRO ASISTENCIA ========== */@Mapper(componentModel = "spring")public interface RegistroAsistenciaMapper {    @Mapping(source = "asistenciaDia.id", target = "asistenciaDiaId")    @Mapping(source = "matricula.id", target = "matriculaId")    RegistroAsistenciaDTO toDto(RegistroAsistencia entity);    @Mapping(target = "asistenciaDia", ignore = true)    @Mapping(target = "matricula", ignore = true)    RegistroAsistencia toEntity(RegistroAsistenciaDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "asistenciaDia", ignore = true)    @Mapping(target = "matricula", ignore = true)    void updateEntityFromDto(RegistroAsistenciaDTO dto, @MappingTarget RegistroAsistencia entity);}/* ========== LICENCIA ========== */@Mapper(componentModel = "spring")public interface LicenciaMapper {    @Mapping(source = "personal.id", target = "personalId")    LicenciaDTO toDto(Licencia entity);    @Mapping(target = "personal", ignore = true)    Licencia toEntity(LicenciaDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "personal", ignore = true)    void updateEntityFromDto(LicenciaDTO dto, @MappingTarget Licencia entity);}/* ========== ASPIRANTE ========== */@Mapper(componentModel = "spring")public interface AspiranteMapper {    AspiranteDTO toDto(Aspirante entity);    Aspirante toEntity(AspiranteDTO dto);    @Mapping(target = "id", ignore = true)    void updateEntityFromDto(AspiranteDTO dto, @MappingTarget Aspirante entity);}/* ========== SOLICITUD ADMISIÓN ========== */@Mapper(componentModel = "spring")public interface SolicitudAdmisionMapper {    @Mapping(source = "aspirante.id", target = "aspiranteId")    SolicitudAdmisionDTO toDto(SolicitudAdmision entity);    @Mapping(target = "aspirante", ignore = true)    SolicitudAdmision toEntity(SolicitudAdmisionDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "aspirante", ignore = true)    void updateEntityFromDto(SolicitudAdmisionDTO dto, @MappingTarget SolicitudAdmision entity);}/* ========== SECCIÓN ========== */@Mapper(componentModel = "spring", unmappedTargetPolicy = ReportingPolicy.IGNORE)public interface SeccionMapper {    @Mapping(source = "cuotas", target = "cuotasIds")    SeccionDTO toDto(Seccion entity);    @Mapping(target = "cuotas", ignore = true)    Seccion toEntity(SeccionDTO dto);    @Mapping(target = "id", ignore = true)    @Mapping(target = "cuotas", ignore = true)    void updateEntityFromDto(SeccionDTO dto, @MappingTarget Seccion entity);    // === Conversión automática Set<Cuota> -> Set<Long> ===    default Long mapCuotaToId(Cuota cuota) {        return cuota != null ? cuota.getId() : null;    }    default Set<Long> map(Set<Cuota> cuotas) {        return cuotas != null                ? cuotas.stream().map(this::mapCuotaToId).collect(Collectors.toSet())                : null;    }}